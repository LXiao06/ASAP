% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envelope.R
\name{amp_env}
\alias{amp_env}
\title{Calculate Amplitude Envelope for Audio Segment}
\usage{
amp_env(
  segment_row,
  wav_dir = NULL,
  msmooth = NULL,
  norm = FALSE,
  plot = FALSE
)
}
\arguments{
\item{segment_row}{A row from either find_motif output or segment class in SAP object}

\item{wav_dir}{Optional path to WAV files directory (default: NULL)}

\item{msmooth}{Numeric vector of length 2 for envelope smoothing:
\itemize{
\item First value: Window length in number of points
\item Second value: Overlap between windows (percentage)
}
If NULL, no smoothing is applied}

\item{norm}{Logical, whether to normalize envelope to range \link{0,1} (default: FALSE)}

\item{plot}{Logical, whether to plot the envelope (default: FALSE)}
}
\value{
A numeric vector containing the amplitude envelope values
}
\description{
Calculates the amplitude envelope for a specified segment of an audio file.
}
\details{
The function processes audio segments with the following steps:
\itemize{
\item Validates input segment data
\item Constructs correct file path
\item Reads specified portion of audio file
\item Calculates amplitude envelope
\item Optionally smooths and normalizes the envelope
}
}
\examples{
\dontrun{
# Basic envelope calculation
env <- amp_env(segments[1,], wav_dir = "path/to/wavs")

# With smoothing and normalization
env <- amp_env(segments[1,],
               wav_dir = "path/to/wavs",
               msmooth = c(256, 50),
               norm = TRUE)

# With plot
env <- amp_env(segments[1,],
               wav_dir = "path/to/wavs",
               msmooth = c(256, 50),
               plot = TRUE)
}

}
\seealso{
\code{\link{find_motif}} for creating segment data
}
