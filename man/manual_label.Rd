% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label.R
\name{manual_label}
\alias{manual_label}
\title{Manual Syllable Labeling for Bird Song Analysis}
\usage{
manual_label(
  x,
  data_type = c("segment", "syllable"),
  label_map = NULL,
  interactive = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{x}{A Sap object containing bird song analysis data}

\item{data_type}{Type of data to label: "segment" or "syllable"}

\item{label_map}{Optional data frame for non-interactive labeling with columns:
\itemize{
\item cluster: numeric cluster IDs
\item syllable: corresponding letter labels (a-z)
}}

\item{interactive}{Logical; force interactive mode even if label_map exists}

\item{verbose}{Logical; print progress messages and summaries}
}
\value{
Returns modified Sap object with:
\itemize{
\item Updated syllable labels in x$syllables
\item Stored label map in feature embeddings attributes
\item All labels converted to lowercase
}
}
\description{
Provides interactive or map-based assignment of alphabetic labels to automatically
clustered syllables. Supports both interactive console input and predefined label
maps, with persistent storage of label assignments.
}
\details{
The function provides two main methods for syllable labeling:
\enumerate{
\item Interactive Console Mode:
\itemize{
\item Prompts for letter input for each cluster
\item Validates input (single letters a-z only)
\item Allows quitting mid-process ('q')
\item Automatically stores label map for future use
}
\item Label Map Mode:
\itemize{
\item Uses predefined mapping of clusters to letters
\item Validates completeness and format of mapping
\item Updates stored label map
}
}

Label Storage and Retrieval:
\itemize{
\item Label maps are stored in the Sap object attributes
\item Automatically retrieved in subsequent runs
\item Can be overridden with new map or interactive session
\item Accessible via attr(x$features$<data_type>$feat.embeds, "label_map")
}
}
\section{Label Map Format}{

The label_map data frame must have:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{data.frame(
  cluster = numeric_vector,  # Cluster IDs from auto_label
  syllable = character_vector  # Single letters a-z
)
}\if{html}{\out{</div>}}
}

\section{Tips for Interactive Labeling}{

\itemize{
\item View clusters first using plot_cluster(..., label_type = "pre")
\item Consider similar acoustic features when assigning same letter
\item Use 'q' to exit without saving if mistakes are made
\item Review label summary after completion
\item Store label_map externally for reproducibility
}
}

\section{Common Workflows}{

\enumerate{
\item First-time labeling:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{sap <- auto_label(sap)  # Generate clusters
sap <- manual_label(sap, data_type = "syllable")  # Label interactively
}\if{html}{\out{</div>}}
\item Using stored labels:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{sap <- manual_label(sap, data_type = "syllable")  # Uses stored map
}\if{html}{\out{</div>}}
\item Updating labels:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# Extract and modify existing map
map <- attr(sap$features$syllable$feat.embeds, "label_map")
map$syllable[map$cluster == 3] <- "d"  # Change cluster 3 to 'd'
sap <- manual_label(sap, data_type = "syllable", label_map = map)
}\if{html}{\out{</div>}}
}
}

\examples{
\dontrun{
# Interactive labeling (first time)
sap <- manual_label(sap, data_type = "syllable")

# Using stored labels (subsequent runs)
sap <- manual_label(sap, data_type = "syllable")

# Force new interactive session
sap <- manual_label(sap,
                   data_type = "syllable",
                   interactive = TRUE)

# Using predefined label map
label_map <- data.frame(
  cluster = 1:5,
  syllable = c("a", "b", "b", "c", "a")
)
sap <- manual_label(sap,
                   data_type = "syllable",
                   label_map = label_map)

# Access stored label map
stored_map <- attr(sap$features$syllable$feat.embeds, "label_map")
print(stored_map)

# Typical workflow:
# 1. Run automatic clustering
sap <- auto_label(sap)

# 2. View clusters
plot_cluster(sap,
            data_type = "syllable",
            label_type = "pre")

# 3. Manually label clusters
sap <- manual_label(sap, data_type = "syllable")

# 4. View syllable labels
plot_cluster(sap,
            data_type = "syllable",
            label_type = "post")
}

}
\seealso{
\itemize{
\item auto_label() for automatic cluster generation
\item plot_cluster() for visualizing clusters and syllables
}
}
