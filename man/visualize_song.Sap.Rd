% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrogramming.R
\name{visualize_song.Sap}
\alias{visualize_song.Sap}
\title{Visualize Songs from a SAP Object}
\usage{
\method{visualize_song}{Sap}(
  x,
  indices = NULL,
  n_sample = 6,
  random = TRUE,
  start_time_in_second = NULL,
  end_time_in_second = NULL,
  fft_window_size = 1024,
  overlap = 0.75,
  keep.par = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{A SAP object containing song recordings}

\item{indices}{Numeric vector of specific indices to visualize}

\item{n_sample}{Number of random samples to plot (default: 6)}

\item{random}{Randomly sample songs if TRUE, otherwise sample sequentially}

\item{start_time_in_second}{Optional start times for each song}

\item{end_time_in_second}{Optional end times for each song}

\item{fft_window_size}{Size of FFT window (default: 1024)}

\item{overlap}{Overlap between windows (default: 0.75)}

\item{keep.par}{Preserve plotting parameters (default: TRUE)}

\item{verbose}{Print processing messages (default: FALSE)}

\item{...}{Additional arguments}
}
\value{
Generates a multi-panel spectrogram plot. Returns the input SAP object invisibly.
}
\description{
Creates spectrograms for multiple songs from a SAP object,
with options for sampling and customization.
}
\details{
Generates spectrograms for multiple songs from a SAP object with
flexible sampling and visualization options:
\itemize{
\item Select specific indices or sample randomly/sequentially
\item Customize time ranges for each song
\item Control spectrogram visualization parameters
}
}
