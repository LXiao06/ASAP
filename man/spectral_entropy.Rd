% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entropy.R
\name{spectral_entropy}
\alias{spectral_entropy}
\alias{spectral_entropy.default}
\alias{spectral_entropy.Sap}
\alias{spectral_entropy.matrix}
\title{Calculate Spectral Entropy for Audio Segments}
\usage{
spectral_entropy(x, ...)

\method{spectral_entropy}{default}(
  x,
  wav_dir = NULL,
  wl = 512,
  wn = "hanning",
  ovlp = 50,
  fftw = TRUE,
  freq_range = c(500, 15000),
  threshold = 10,
  method = c("weiner", "shannon"),
  normalize = FALSE,
  plot = TRUE,
  plot_entropy_lim = NULL,
  color_palette = NULL,
  n_colors = 500,
  cores = NULL,
  ...
)

\method{spectral_entropy}{Sap}(
  x,
  segment_type = c("motifs", "syllables", "segments"),
  sample_percent = NULL,
  balanced = FALSE,
  labels = NULL,
  clusters = NULL,
  cores = NULL,
  seed = 222,
  wl = 512,
  wn = "hanning",
  ovlp = 50,
  fftw = TRUE,
  freq_range = c(500, 15000),
  threshold = 10,
  method = c("weiner", "shannon"),
  normalize = FALSE,
  plot = TRUE,
  plot_entropy_lim = NULL,
  color_palette = NULL,
  n_colors = 500,
  ordered = FALSE,
  descending = TRUE,
  verbose = TRUE,
  ...
)

\method{spectral_entropy}{matrix}(
  x,
  labels = NULL,
  plot_entropy_lim = NULL,
  color_palette = NULL,
  n_colors = 500,
  main = "Spectral Entropy Heatmap",
  ...
)
}
\arguments{
\item{x}{Input object:
\itemize{
\item data frame (default method)
\item SAP object
\item Pre-computed matrix for spectral entropy
}}

\item{...}{Additional arguments passed to levelplot}

\item{wav_dir}{Directory containing WAV files (for data frame methods)}

\item{wl}{Window length for FFT (default: 512)}

\item{wn}{Window name for FFT (default: "hanning")}

\item{ovlp}{Overlap percentage between windows (default: 50)}

\item{fftw}{Logical, use FFTW or not (default: TRUE)}

\item{freq_range}{Frequency range for analysis c(min, max) in Hz (default: c(500, 15000))}

\item{threshold}{Amplitude threshold for power spectrum (default: 10)}

\item{method}{Entropy type ("weiner" or "shannon")}

\item{normalize}{Logical, whether to normalize entropy values (default: FALSE)}

\item{plot}{Logical, whether to plot results (default: TRUE)}

\item{plot_entropy_lim}{Optional limits for entropy plot c(min, max)}

\item{color_palette}{Custom color palette function}

\item{n_colors}{Number of colors in palette (default: 500)}

\item{cores}{Number of cores for parallel processing}

\item{segment_type}{For SAP objects: Type of segments (currently only 'motifs')}

\item{sample_percent}{For SAP objects: Percentage of segments to sample}

\item{balanced}{For SAP objects: Whether to balance samples across labels}

\item{labels}{Optional vector of labels for subsetting or grouping}

\item{clusters}{For SAP objects: Numeric vector of cluster IDs to include}

\item{seed}{Random seed for sampling (default: 222)}

\item{ordered}{For SAP objects: Whether to order by feature embeddings}

\item{descending}{For SAP objects: Direction of embedding-based ordering}

\item{verbose}{Logical, whether to print progress messages}

\item{main}{Plot title (for matrix method)}
}
\value{
For single segments, returns a matrix with columns time and entropy.
For multiple segments, returns a list with components:
\itemize{
\item entropy_matrix: Matrix of entropy values
\item reference_time: Reference time axis
\item original_times: List of original time vectors
\item plot: If plot=TRUE, the generated plot
}
}
\description{
Calculates spectral entropy (Wiener or Shannon) for audio segments, providing measures
of spectral uniformity or complexity in sound signals.
}
\details{
Wiener entropy measures the uniformity of power distribution:
\itemize{
\item Non-normalized (default): returns log-scaled values from -Inf to 0
\itemize{
\item 0 indicates uniform distribution (white noise)
\item Large negative values indicate structured sound (pure tones)
}
\item Normalized: returns values from 0 to 1
\itemize{
\item 1 indicates uniform distribution
\item Values close to 0 indicate structured sound
}
}

Shannon entropy measures information content:
\itemize{
\item Non-normalized: returns values >= 0
\itemize{
\item Higher values indicate more uniformity/randomness
\item Lower values indicate more structure/predictability
}
\item Normalized: returns values from 0 to 1
\itemize{
\item Scale relative to maximum possible entropy for vector length
}
}
}
\examples{
\dontrun{
# Calculate Wiener entropy for a single segment
entropy <- spectral_entropy(segment,
                          wav_dir = "path/to/wavs",
                          method = "weiner",
                          normalize = FALSE)

# Calculate normalized Shannon entropy for multiple segments
entropy_list <- spectral_entropy(segments,
                               wav_dir = "path/to/wavs",
                               method = "shannon",
                               normalize = TRUE,
                               freq_range = c(1000, 10000))

# Method for Sap objects
sap <- spectral_entropy(sap,
                       segment_type = "motifs",
                       method = "weiner",
                       normalize = FALSE,
                       plot = TRUE)

# Access the entropy matrix
wiener_entropy <- sap$features$motif$weiner_entropy

# Method for entropy matrices
# Plot existing entropy matrix with custom settings
spectral_entropy(wiener_entropy,
                plot_entropy_lim = c(-3, 0),
                color_palette = colorRampPalette(c("purple", "blue", 
                                                  "cyan", "yellow", 
                                                  "orange", "red")),
                main = "Custom Entropy Visualization")

# Plot subset of entropy matrix using labels
spectral_entropy(wiener_entropy,
                labels = c("a", "b", "c"),
                plot_entropy_lim = c(0, 1),
                n_colors = 1000)
}

}
