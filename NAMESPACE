# Generated by roxygen2: do not edit by hand

S3method(analyze_spectral,Sap)
S3method(analyze_spectral,default)
S3method(create_audio_clip,Sap)
S3method(create_audio_clip,default)
S3method(create_template,Sap)
S3method(create_template,default)
S3method(create_trajectory_matrix,Sap)
S3method(create_trajectory_matrix,default)
S3method(detect_template,Sap)
S3method(detect_template,default)
S3method(find_bout,Sap)
S3method(find_bout,default)
S3method(find_clusters,Sap)
S3method(find_clusters,default)
S3method(find_motif,Sap)
S3method(find_motif,default)
S3method(plot_heatmap,Sap)
S3method(plot_heatmap,default)
S3method(plot_heatmap,matrix)
S3method(plot_umap,Sap)
S3method(plot_umap,default)
S3method(plot_umap2,Sap)
S3method(plot_umap2,default)
S3method(print,segment)
S3method(run_pca,Sap)
S3method(run_pca,default)
S3method(run_umap,Sap)
S3method(run_umap,default)
S3method(segment,Sap)
S3method(segment,default)
S3method(summary,segment)
S3method(visualize_segments,Sap)
S3method(visualize_segments,default)
S3method(visualize_song,Sap)
S3method(visualize_song,default)
export(amp_env)
export(analyze_spectral)
export(as_segment)
export(create_audio_clip)
export(create_sap_metadata)
export(create_sap_object)
export(create_template)
export(create_trajectory_matrix)
export(detect_template)
export(find_bout)
export(find_clusters)
export(find_motif)
export(plot_heatmap)
export(plot_traces)
export(plot_umap)
export(plot_umap2)
export(run_pca)
export(run_umap)
export(segment)
export(visualize_segments)
export(visualize_song)
importClassesFrom(tuneR,Wave)
importFrom(Matrix,sparseMatrix)
importFrom(Rcpp,sourceCpp)
importFrom(av,av_audio_convert)
importFrom(av,read_audio_fft)
importFrom(bigstatsr,as_FBM)
importFrom(bigstatsr,big_randomSVD)
importFrom(bigstatsr,big_scale)
importFrom(dplyr,"%>%")
importFrom(dplyr,arrange)
importFrom(dplyr,bind_rows)
importFrom(dplyr,case_when)
importFrom(dplyr,count)
importFrom(dplyr,filter)
importFrom(dplyr,first)
importFrom(dplyr,group_by)
importFrom(dplyr,group_modify)
importFrom(dplyr,lag)
importFrom(dplyr,left_join)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,pull)
importFrom(dplyr,rename)
importFrom(dplyr,row_number)
importFrom(dplyr,select)
importFrom(dplyr,slice_sample)
importFrom(dplyr,summarise)
importFrom(dplyr,ungroup)
importFrom(ggplot2,aes)
importFrom(ggplot2,element_text)
importFrom(ggplot2,facet_wrap)
importFrom(ggplot2,geom_line)
importFrom(ggplot2,geom_point)
importFrom(ggplot2,ggplot)
importFrom(ggplot2,ggtitle)
importFrom(ggplot2,labs)
importFrom(ggplot2,scale_alpha_continuous)
importFrom(ggplot2,scale_color_brewer)
importFrom(ggplot2,scale_color_manual)
importFrom(ggplot2,scale_fill_brewer)
importFrom(ggplot2,stat_summary)
importFrom(ggplot2,theme)
importFrom(ggplot2,theme_minimal)
importFrom(graphics,abline)
importFrom(graphics,layout)
importFrom(graphics,legend)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(graphics,text)
importFrom(irlba,prcomp_irlba)
importFrom(lattice,levelplot)
importFrom(lattice,panel.abline)
importFrom(lattice,panel.levelplot)
importFrom(monitoR,corMatch)
importFrom(monitoR,findPeaks)
importFrom(monitoR,getDetections)
importFrom(monitoR,makeCorTemplate)
importFrom(monitoR,templateCutoff)
importFrom(monitoR,writeCorTemplates)
importFrom(parallel,detectCores)
importFrom(patchwork,wrap_plots)
importFrom(pbapply,pblapply)
importFrom(pbapply,pbsapply)
importFrom(pbmcapply,pbmclapply)
importFrom(rlang,"!!")
importFrom(rlang,sym)
importFrom(seewave,afilter)
importFrom(seewave,bwfilter)
importFrom(seewave,duration)
importFrom(seewave,env)
importFrom(seewave,ftwindow)
importFrom(seewave,inputw)
importFrom(seewave,meanspec)
importFrom(seewave,sfm)
importFrom(seewave,sh)
importFrom(seewave,spec)
importFrom(seewave,sspectro)
importFrom(seewave,th)
importFrom(signal,hanning)
importFrom(stats,complete.cases)
importFrom(stats,sd)
importFrom(tictoc,tic)
importFrom(tictoc,toc)
importFrom(tidyr,pivot_longer)
importFrom(tools,file_path_sans_ext)
importFrom(tuneR,readWave)
importFrom(utils,read.table)
importFrom(utils,write.table)
useDynLib(ASAP, .registration = TRUE)
